name: Android CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install requirements
        run: |
          sudo apt install ruby -y
      - name: Configure SSH key
        env:
          SSH_PRK: ${{ secrets.SSH_PRK }}
        run: |
          if [ ! -d ~/.ssh ]; then
              mkdir ~/.ssh
          fi
          ssh-keyscan gitlab.com 2> /dev/null >> ~/.ssh/known_hosts
          echo $SSH_PRK | base64 -d > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
      - name: Build app
        run: |
          docker build . -t some-tools-build
          docker run --name some-tools some-tools-build
          docker cp some-tools:/apks .
      - name: Upload apk to GitLab
        run: |
          cd "${GITHUB_WORKSPACE}"
          encoded_commit_info=`git log --no-decorate --max-count=1 | base64 -w 0`
          commit_hash=`git log --format=%H | head -n1`

          git clone git@gitlab.com:bczhc/store
          cd store

          rm -rf .git
          git init
          git remote add origin git@gitlab.com:bczhc/store
          
          mkdir -p apks/some-tools 2> /dev/null || true
          cd ..

          tools/store-apk apks store/apks/some-tools $commit_hash $encoded_commit_info

          cd store
          git config --global user.email "<>"
          git config --global user.name "github-actions-bot"
          git add --all
          git commit -m "update $(date)"
          git push origin master -f
          cd "${GITHUB_WORKSPACE}"
      - name: Upload APKs
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: apks
